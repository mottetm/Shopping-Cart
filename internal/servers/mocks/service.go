// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mottetm/Shopping-Cart/internal/servers (interfaces: ShoppingCartService)

// Package server_mocks is a generated GoMock package.
package servers_mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	shopping_cart "github.com/mottetm/Shopping-Cart/internal/services/shopping_cart"
)

// MockShoppingCartService is a mock of ShoppingCartService interface.
type MockShoppingCartService struct {
	ctrl     *gomock.Controller
	recorder *MockShoppingCartServiceMockRecorder
}

// MockShoppingCartServiceMockRecorder is the mock recorder for MockShoppingCartService.
type MockShoppingCartServiceMockRecorder struct {
	mock *MockShoppingCartService
}

// NewMockShoppingCartService creates a new mock instance.
func NewMockShoppingCartService(ctrl *gomock.Controller) *MockShoppingCartService {
	mock := &MockShoppingCartService{ctrl: ctrl}
	mock.recorder = &MockShoppingCartServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShoppingCartService) EXPECT() *MockShoppingCartServiceMockRecorder {
	return m.recorder
}

// GetItems mocks base method.
func (m *MockShoppingCartService) GetItems(arg0 context.Context) ([]shopping_cart.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems", arg0)
	ret0, _ := ret[0].([]shopping_cart.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItems indicates an expected call of GetItems.
func (mr *MockShoppingCartServiceMockRecorder) GetItems(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockShoppingCartService)(nil).GetItems), arg0)
}

// PostItem mocks base method.
func (m *MockShoppingCartService) PostItem(arg0 context.Context, arg1 shopping_cart.Item) (shopping_cart.ItemId, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostItem", arg0, arg1)
	ret0, _ := ret[0].(shopping_cart.ItemId)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostItem indicates an expected call of PostItem.
func (mr *MockShoppingCartServiceMockRecorder) PostItem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostItem", reflect.TypeOf((*MockShoppingCartService)(nil).PostItem), arg0, arg1)
}
